# This is a basic workflow to help you get started with Actions

name: Linux

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "check_code_style"
  secured:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE,  so your job can access it
      - uses: actions/checkout@v3
      # Runs a set of commands using the runners shell
      - name: Build secured binaries
        run: |
          # https://github.com/actions/checkout/issues/81
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
          # create the make files in a subfolder
          mkdir linuxbuild
          cd linuxbuild
          cmake ../. -DOC_OSCORE_ENABLED=ON
          make all

  secured_iot_router:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE,  so your job can access it
      - uses: actions/checkout@v3
      # Runs a set of commands using the runners shell
      - name: Build Iot Router
        run: |
          # https://github.com/actions/checkout/issues/81
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
          # create the make files in a subfolder
          mkdir linuxbuild_iot_router
          cd linuxbuild_iot_router
          cmake ../. -DOC_OSCORE_ENABLED=ON -DOC_IOT_ROUTER_ENABLED=ON
          make all

  unsecured:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build unsecured binaries
        run: |
          # https://github.com/actions/checkout/issues/81
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
          # create the make files in a subfolder
          mkdir linuxbuild_sec
          cd linuxbuild_sec
          cmake ../. -DOC_OSCORE_ENABLED=OFF
          make all

  test_unsecured:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run tests with security disabled
        run: |
          # https://github.com/actions/checkout/issues/81
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
          # create the make files in a subfolder
          mkdir linuxbuild_sec
          cd linuxbuild_sec
          cmake ../. -DOC_OSCORE_ENABLED=OFF -DBUILD_TESTING=ON
          make apitest platformtest messagingtest
          ./api/unittest/apitest
          ./port/unittest/platformtest
          #./storage_test
          ./messaging/coap/unittest/messagingtest

  test_secured:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run tests with security enabled
        run: |
          # https://github.com/actions/checkout/issues/81
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
          # create the make files in a subfolder
          mkdir linuxbuild_sec
          cd linuxbuild_sec
          cmake ../. -DOC_OSCORE_ENABLED=ON -DBUILD_TESTING=ON
          make apitest platformtest messagingtest securitytest
          ./api/unittest/apitest
          ./port/unittest/platformtest
          #./storage_test
          ./messaging/coap/unittest/messagingtest
          ./security/unittest/securitytest
